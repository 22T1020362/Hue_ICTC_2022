#include <bits/stdc++.h>
#define fi first
#define se second
#define TASK "A"

using namespace std;

template<class X, class Y>
    bool maximize(X &x, const Y &y) {
        if (x < y) {
            x = y;
            return true;
        }
        return false;
    }
template<class X, class Y>
    bool minimize(X &x, const Y &y) {
        if (x > y) {
            x = y;
            return true;
        }
        return false;
    }
template<class T>
    T Abs (const T &x) {
        return (x < 0 ? -x : x);
    }
using ll  = long long int;
using pii = pair<int,int>;

int n;
const int MAX = 24 * 60;

bool ok[MAX + 5];

void readInput () {
    cin >> n;
    memset(ok, false, sizeof ok);
    for (int i = 1; i <= n; i++) {
        int num1 = 0, num2 = 0, time_open, time_close;
        char c;
        cin >> c;
        num1 = num1 * 10 + c - '0';
        cin >> c;
        num1 = num1 * 10 + c - '0';
        cin >> c;
        cin >> c;
        num2 = num2 * 10 + c - '0';
        cin >> c;
        num2 = num2 * 10 + c - '0';

        time_open = num1 * 60 + num2;

        num1 = num2 = 0;
        cin >> c;
        num1 = num1 * 10 + c - '0';
        cin >> c;
        num1 = num1 * 10 + c - '0';
        cin >> c;
        cin >> c;
        num2 = num2 * 10 + c - '0';
        cin >> c;
        num2 = num2 * 10 + c - '0';
        time_close = num1 * 60 + num2;
        for (int j = time_open; j != time_close; j = (j + 1) % MAX) ok[j] = true;
    }
}

void solve () {
   for (int i = 0; i < MAX; i++) if (!ok[i]) {
        cout << "huhuhu\n";
        return ;
   }
   cout << "bubbletea is delicious!\n";
}

int main () {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    if(fopen(TASK ".inp", "r")) {
        freopen(TASK ".inp", "r", stdin);
        freopen(TASK ".out", "w", stdout);
    }
    int num_test_case = 2;
    while (num_test_case--) {
        readInput();
        solve();
    }
    return 0;
}


