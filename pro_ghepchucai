#include<bits/stdc++.h>
#define ll long long
using namespace std;

ll n,m,g,s,p,v,h,c,u,t,e,k;
char a[100] = {'G','S','P','V','H','C','U','T','E'};
ll M[1005],D[1005];
vector<ll>adj[100];

bool check ( string s ){
	//memset(D,0,sizeof(D));
	for ( ll j=0;j<9;j++ ) D[a[j]] = 0;
	ll n = s.size();
	if ( adj[n].size()!=0 ){
		for ( auto v : adj[n] ){
			if ( s[v-1]==s[n-1] ) return 0;
		}
	}
	return 1;
}
void Try ( ll i , string s , char G ,char S,char P,char V,char H,char C,char U,char T,char E){

	//if ( s=="GGGGGGGGGGGGGGGGGGGGGGGGGG" ) cout << i;
	if ( i==1 ){
		for ( ll j=0;j<9;j++ )
		{
			// Try(i+1,s+a[j],G,S,P,V,H,C,U,T,E);
			if ( a[j]=='G' && G+1<=M['G'] ) Try(i+1,s+a[j],G+1,S,P,V,H,C,U,T,E);			
			if ( a[j]=='S' && S+1<=M['S'] ) Try(i+1,s+a[j],G,S+1,P,V,H,C,U,T,E);
			if ( a[j]=='P' && P+1<=M['P'] ) Try(i+1,s+a[j],G,S,P+1,V,H,C,U,T,E);
			if ( a[j]=='V' && V+1<=M['V'] ) Try(i+1,s+a[j],G,S,P,V+1,H,C,U,T,E);
			if ( a[j]=='H' && H+1<=M['H'] ) Try(i+1,s+a[j],G,S,P,V,H+1,C,U,T,E);
			if ( a[j]=='C' && C+1<=M['C'] ) Try(i+1,s+a[j],G,S,P,V,H,C+1,U,T,E);
			if ( a[j]=='U' && U+1<=M['U'] ) Try(i+1,s+a[j],G,S,P,V,H,C,U+1,T,E);
			if ( a[j]=='T' && T+1<=M['T'] ) Try(i+1,s+a[j],G,S,P,V,H,C,U,T+1,E);
			if ( a[j]=='E' && E+1<=M['E'] ) Try(i+1,s+a[j],G,S,P,V,H,C,U,T,E+1);
		}
	}

	if ( !check(s) ) return;
	else {
		//cout << s << "\n";
		k--;
		if ( k==0 ){
			cout << s;
			exit(0);
		}
		if ( i>n ) return;
		for ( ll j=0;j<9;j++ )
		{
			// Try(i+1,s+a[j],G,S,P,V,H,C,U,T,E);
			if ( a[j]=='G' && G+1<=M['G'] ) Try(i+1,s+a[j],G+1,S,P,V,H,C,U,T,E);			
			if ( a[j]=='S' && S+1<=M['S'] ) Try(i+1,s+a[j],G,S+1,P,V,H,C,U,T,E);
			if ( a[j]=='P' && P+1<=M['P'] ) Try(i+1,s+a[j],G,S,P+1,V,H,C,U,T,E);
			if ( a[j]=='V' && V+1<=M['V'] ) Try(i+1,s+a[j],G,S,P,V+1,H,C,U,T,E);
			if ( a[j]=='H' && H+1<=M['H'] ) Try(i+1,s+a[j],G,S,P,V,H+1,C,U,T,E);
			if ( a[j]=='C' && C+1<=M['C'] ) Try(i+1,s+a[j],G,S,P,V,H,C+1,U,T,E);
			if ( a[j]=='U' && U+1<=M['U'] ) Try(i+1,s+a[j],G,S,P,V,H,C,U+1,T,E);
			if ( a[j]=='T' && T+1<=M['T'] ) Try(i+1,s+a[j],G,S,P,V,H,C,U,T+1,E);
			if ( a[j]=='E' && E+1<=M['E'] ) Try(i+1,s+a[j],G,S,P,V,H,C,U,T,E+1);
		}
	}

}
int main(){
	cin>>M['G']>>M['S']>>M['P']>>M['V']>>M['H']>>M['C']>>M['U']>>M['T']>>M['E'];
	cin >> m;
	while ( m-- ){
		ll x , y;
		cin >> x >> y;
		if ( x<y ) swap (x,y);
		adj[x].push_back(y);
	}
	cin >> k;
	sort ( a+0,a+9 );
	n = M['G']+M['S']+M['P']+M['V']+M['H']+M['C']+M['U']+M['T']+M['E'];
	Try(1,"",0,0,0,0,0,0,0,0,0);
	//cout << check("GGGGGGGGGGGGGGGGGGGGGGGGG");
}
